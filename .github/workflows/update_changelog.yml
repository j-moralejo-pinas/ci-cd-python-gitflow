name: Changelog slice between releases

on:
  workflow_dispatch:
  push:
    branches:
      - 'release/**'
      - 'major/**'

permissions:
  contents: write
  pull-requests: read

jobs:
  slice:
    runs-on: ubuntu-latest
    env:
      REPO_SLUG: ${{ github.repository }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      # Compute the new version as the first step
      - name: Compute new version
        id: semver
        uses: ./.github/actions/find-next-semver

      # Detect last version present in CHANGELOG.md (first header starting with '## vX.Y.Z - YYYY-MM-DD')
      - name: Determine last CHANGELOG version
        id: changelog_last
        uses: ./.github/actions/get-last-changelog-version
        with:
          changelog_path: CHANGELOG.rst

      # Compare versions (semantic): result only if new_tag > last_tag
      - name: Check if new version is above last changelog version
        id: should_run
        uses: ./.github/actions/compare-versions
        with:
          new_tag: ${{ steps.semver.outputs.new_tag }}
          last_tag: ${{ steps.changelog_last.outputs.last_tag }}

      - name: Find release cuts (previous and current)
        id: cuts
        if: ${{ steps.should_run.outputs.result == 'true' }}
        uses: ./.github/actions/find-release-cuts
        with:
          dev_branch: dev
          main_branch: main

      - name: Find PRs on dev between cuts
        id: prs
        if: ${{ steps.should_run.outputs.result == 'true' }}
        uses: ./.github/actions/find-prs-between-cuts
        with:
          token: ${{ github.token }}
          repo: ${{ env.REPO_SLUG }}
          dev_branch: dev
          prev_cut: ${{ steps.cuts.outputs.prev_cut }}
          cur_cut: ${{ steps.cuts.outputs.cur_cut }}

      - name: Build and prepend changelog slice
        if: ${{ steps.should_run.outputs.result == 'true' }}
        uses: ./.github/actions/update-changelog-slice
        with:
          token: ${{ github.token }}
          prs: ${{ steps.prs.outputs.numbers }}
          version: ${{ steps.semver.outputs.new_tag }}
          changelog_path: CHANGELOG.md

      - name: Commit and push changelog
        uses: ./.github/actions/commit-and-push
        with:
          pat: ${{ secrets.ADMIN_TOKEN }}
          message: chore: update changelog for ${{ steps.semver.outputs.new_tag }}
          labels: changelog
        if: ${{ steps.should_run.outputs.result == 'true' }}
