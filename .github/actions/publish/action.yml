name: Publish Distribution
description: Build the package at a given tag and publish to TestPyPI and, if a PyPI token is provided, to PyPI.

inputs:
  tag:
    description: Tag to check out (vX.Y.Z)
    required: true
  version:
    description: Version without leading v (X.Y.Z)
    required: true
  test_pypi_token:
    description: API token for TestPyPI
    required: true
  pypi_token:
    description: API token for PyPI
    required: false

runs:
  using: composite
  steps:
    - name: Checkout at tag
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.tag }}
        fetch-depth: 0
        fetch-tags: true

    - name: Get minimum Python version
      id: python-version
      uses: j-moralejo-pinas/ci-cd-python-gitflow/.github/actions/get-min-python-version@main

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ steps.python-version.outputs.min_python_version }}

    # TODO: Re-enable README fix when the script is ready
    # - name: Fix README
    #   shell: bash
    #   run: |
    #     bash "${GITHUB_ACTION_PATH}/fix-readme.sh"

    - name: Detect package name from pyproject.toml
      id: pkg
      shell: bash
      run: |
        bash "${GITHUB_ACTION_PATH}/publish-build-test.sh" \
          "${{ inputs.version }}" \
          "${{ inputs.test_pypi_token }}"

    # The build + TestPyPI verification flow is performed in the previous step
    - name: Verify installed version
      shell: bash
      env:
        PKG: ${{ env.IMPORT_NAME }}
        EXPECTED: ${{ inputs.version }}
      run: |
        bash "${GITHUB_ACTION_PATH}/verify-version.sh" \
          "${PKG}" \
          "${EXPECTED}"

    - name: Upload to PyPI
      if: ${{ success() && inputs.pypi_token != '' }}
      shell: bash
      run: |
        bash "${GITHUB_ACTION_PATH}/publish-upload-pypi.sh" \
          "${{ inputs.pypi_token }}"
