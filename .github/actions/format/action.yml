name: Format and Autofix
description: Run formatting tools (pyupgrade, ruff, docformatter) and push autofix commit if needed.

inputs:
  pat_token:
    description: Personal Access Token with permission to push autofix commits
    required: true
    default: ''

outputs:
  did_push:
    description: Whether an autofix commit was pushed
    value: ${{ steps.commit_push.outputs.did_push || 'false' }}

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Check out the contributor's branch (the PR head), not the merge ref
        ref: ${{ github.head_ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        fetch-depth: 0
        persist-credentials: false

    - name: Stop if last commit is our autofix
      id: skip_autofix
      shell: bash
      run: |
        if git log -1 --pretty=%B | grep -q "\[autofix\]"; then
          echo "skip=yes" >> $GITHUB_OUTPUT
        else
          echo "skip=no" >> $GITHUB_OUTPUT
        fi

    - name: Set up Python
      if: steps.skip_autofix.outputs.skip == 'no'
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install and run formatters
      if: steps.skip_autofix.outputs.skip == 'no'
      shell: bash
      run: |
        bash "${GITHUB_ACTION_PATH}/run-format.sh"

    - name: Commit and push changes
      id: commit_push
      if: steps.skip_autofix.outputs.skip == 'no'
      uses: j-moralejo-pinas/ci-cd-python-gitflow/.github/actions/commit-push@main
      with:
        pat: ${{ inputs.pat_token }}
        message: "style: apply autofix"
        labels: autofix
